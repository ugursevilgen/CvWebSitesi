@using MvcCv.Models.Entity
@model List<TblHobilerim>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Hobi Düzenle</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .admin-form {
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            padding: 30px;
            margin-top: 30px;
        }

        .form-header {
            border-bottom: 2px solid #6c757d;
            padding-bottom: 10px;
            margin-bottom: 25px;
        }

        .btn-update {
            background: #28a745;
            padding: 8px 25px;
            font-weight: 600;
        }

        .hobi-item {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <div class="admin-form">
                    <div class="form-header">
                        <h2><i class="fas fa-hiking me-2"></i>Hobi Bilgilerini Düzenle</h2>
                        <p class="text-muted">Hobi açıklamalarını aşağıdaki formlardan güncelleyebilirsiniz.</p>
                    </div>

                    @foreach (var item in Model)
                    {
                        <div class="hobi-item">
                            <form method="post">
                                <input type="hidden" name="ID" value="@item.ID" />

                                <div class="mb-3">
                                    <label class="form-label fw-bold">Hobi Adı</label>
                                    <textarea class="form-control" name="Aciklama1" rows="3" required>@item.Aciklama1</textarea>
                                </div>

                                <div class="mb-4">
                                    <label class="form-label fw-bold">Açıklama</label>
                                    <textarea class="form-control" name="Aciklama2" rows="3" required>@item.Aciklama2</textarea>
                                </div>

                                <div class="text-end">
                                    <button type="submit" class="btn btn-update btn-success">
                                        <i class="fas fa-sync-alt me-2"></i>Güncelle
                                    </button>
                                </div>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


    <script>
        // URL'de success parametresi varsa bildirimi göster
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const success = urlParams.get('success');

            if (success === 'true') {
                showNotification('Güncelleme başarıyla kaydedildi!');
            }
        });

        // Form gönderiminde çalışacak fonksiyon
        function handleFormSubmit(event) {
            event.preventDefault();
            const form = event.target;

            fetch(form.action, {
                method: 'POST',
                body: new FormData(form)
            })
                .then(response => {
                    if (response.ok) {
                        showNotification('Güncelleme başarıyla kaydedildi!');
                        // İsteğe bağlı: Sayfayı yenileme
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        showNotification('Güncelleme sırasında bir hata oluştu!', 'error');
                    }
                })
                .catch(error => {
                    showNotification('Bir hata oluştu: ' + error.message, 'error');
                });
        }

        // Bildirim gösteren fonksiyon
        function showNotification(message, type = 'success') {
            const notification = document.getElementById('notification');
            const notificationMsg = document.getElementById('notification-message');

            notification.className = `notification alert alert-${type}`;
            notificationMsg.textContent = message;
            notification.style.display = 'block';

            // 3 saniye sonra otomatik gizleme
            setTimeout(() => {
                notification.style.display = 'none';
            }, 5000);
        }

        // Tüm formlara event listener ekleme
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', handleFormSubmit);
        });
    </script>

    <!-- Bootstrap 5 JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>